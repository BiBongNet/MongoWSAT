<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="DataSet1" targetNamespace="http://tempuri.org/DataSet1.xsd" xmlns:mstns="http://tempuri.org/DataSet1.xsd" xmlns="http://tempuri.org/DataSet1.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Web.config" AppSettingsPropertyName="dbWSATConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="dbWSATConnectionString (Web.config)" ParameterPrefix="@" PropertyReference="AppConfig.System.Configuration.ConfigurationManager.0.ConnectionStrings.dbWSATConnectionString.ConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmailFromTableAdapter" GeneratorDataComponentClassName="EmailFromTableAdapter" Name="EmailFrom" UserDataComponentName="EmailFromTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="dbWSAT.dbo.EmailFrom" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillByFromEmail" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetByFromEmail" GeneratorSourceName="FillByFromEmail" GetMethodModifier="Public" GetMethodName="GetByFromEmail" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetByFromEmail" UserSourceName="FillByFromEmail">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [EmailFrom] WHERE (([EmailFromID] = @Original_EmailFromID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmailFromID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmailFromID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [EmailFrom] ([EmailAddress], [Description]) VALUES (@EmailAddress, @Description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EmailAddress" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EmailAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT EmailFromID, EmailAddress, Description FROM EmailFrom</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [EmailFrom] SET [EmailAddress] = @EmailAddress, [Description] = @Description WHERE (([EmailFromID] = @Original_EmailFromID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@EmailAddress" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="EmailAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_EmailFromID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="EmailFromID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="EmailFromID" DataSetColumn="EmailFromID" />
              <Mapping SourceColumn="EmailAddress" DataSetColumn="EmailAddress" />
              <Mapping SourceColumn="Description" DataSetColumn="Description" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="EmailFomDeleteQuery" Modifier="Public" Name="EmailFomDeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="EmailFomDeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM EmailFrom WHERE (EmailFromID = @Original_EmailFromID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_EmailFromID" ColumnName="EmailFromID" DataSourceName="dbWSAT.dbo.EmailFrom" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_EmailFromID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EmailFromID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="EmailFromInsertQuery" Modifier="Public" Name="EmailFromInsertQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="EmailFromInsertQuery">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>INSERT INTO [EmailFrom] ([EmailAddress], [Description]) VALUES (@EmailAddress, @Description)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="EmailAddress" ColumnName="EmailAddress" DataSourceName="dbWSAT.dbo.EmailFrom" DataTypeServer="nvarchar(256)" DbType="String" Direction="Input" ParameterName="@EmailAddress" Precision="0" ProviderType="NVarChar" Scale="0" Size="256" SourceColumn="EmailAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Description" ColumnName="Description" DataSourceName="dbWSAT.dbo.EmailFrom" DataTypeServer="nvarchar(256)" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="256" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
              </DbSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="EmailFromUpdateQuery" Modifier="Public" Name="EmailFromUpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy2" UserSourceName="EmailFromUpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE EmailFrom SET EmailAddress = @EmailAddress, Description = @Description WHERE (EmailFromID = @Original_EmailFromID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="EmailAddress" ColumnName="EmailAddress" DataSourceName="dbWSAT.dbo.EmailFrom" DataTypeServer="nvarchar(256)" DbType="String" Direction="Input" ParameterName="@EmailAddress" Precision="0" ProviderType="NVarChar" Scale="0" Size="256" SourceColumn="EmailAddress" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="true" AutogeneratedName="Description" ColumnName="Description" DataSourceName="dbWSAT.dbo.EmailFrom" DataTypeServer="nvarchar(256)" DbType="String" Direction="Input" ParameterName="@Description" Precision="0" ProviderType="NVarChar" Scale="0" Size="256" SourceColumn="Description" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_EmailFromID" ColumnName="EmailFromID" DataSourceName="dbWSAT.dbo.EmailFrom" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_EmailFromID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="EmailFromID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="smtpClientTableAdapter" GeneratorDataComponentClassName="smtpClientTableAdapter" Name="smtpClient" UserDataComponentName="smtpClientTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="dbWSAT.dbo.smtpClient" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="FillBySMTP" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetBySMTP" GeneratorSourceName="FillBySMTP" GetMethodModifier="Public" GetMethodName="GetBySMTP" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetBySMTP" UserSourceName="FillBySMTP">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [smtpClient] WHERE (([smtpID] = @Original_smtpID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_smtpID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="smtpID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [smtpClient] ([smtpClient]) VALUES (@smtpClient)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@smtpClient" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="smtpClient" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT smtpID, smtpClient FROM smtpClient</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [smtpClient] SET [smtpClient] = @smtpClient WHERE (([smtpID] = @Original_smtpID))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@smtpClient" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="smtpClient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_smtpID" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="smtpID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="smtpID" DataSetColumn="smtpID" />
              <Mapping SourceColumn="smtpClient" DataSetColumn="smtpClient" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorGetMethodName="GetDataBy1" GeneratorSourceName="SmtpDeleteQuery" Modifier="Public" Name="SmtpDeleteQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy" UserSourceName="SmtpDeleteQuery">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>DELETE FROM smtpClient WHERE (smtpID = @Original_smtpID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_smtpID" ColumnName="smtpID" DataSourceName="dbWSAT.dbo.smtpClient" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_smtpID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="smtpID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
              </DbSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectName="" DbObjectType="Unknown" GenerateShortCommands="true" GeneratorSourceName="SmtpUpdateQuery" Modifier="Public" Name="SmtpUpdateQuery" QueryType="NoData" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetDataBy1" UserSourceName="SmtpUpdateQuery">
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>UPDATE smtpClient SET smtpClient = @smtpClient WHERE (smtpID = @Original_smtpID)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="smtpClient" ColumnName="smtpClient" DataSourceName="dbWSAT.dbo.smtpClient" DataTypeServer="nvarchar(150)" DbType="String" Direction="Input" ParameterName="@smtpClient" Precision="0" ProviderType="NVarChar" Scale="0" Size="150" SourceColumn="smtpClient" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="Original_smtpID" ColumnName="smtpID" DataSourceName="dbWSAT.dbo.smtpClient" DataTypeServer="int" DbType="Int32" Direction="Input" ParameterName="@Original_smtpID" Precision="0" ProviderType="Int" Scale="0" Size="4" SourceColumn="smtpID" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="aspnet_MembershipTableAdapter" GeneratorDataComponentClassName="aspnet_MembershipTableAdapter" Name="aspnet_Membership" UserDataComponentName="aspnet_MembershipTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectType="Unknown" FillMethodModifier="Public" FillMethodName="FillAllUsers" GenerateMethods="Both" GenerateShortCommands="false" GeneratorGetMethodName="GetAllUsers" GeneratorSourceName="FillAllUsers" GetMethodModifier="Public" GetMethodName="GetAllUsers" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="false" UserGetMethodName="GetAllUsers" UserSourceName="FillAllUsers">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        aspnet_Membership.UserId, aspnet_Users.LoweredUserName, aspnet_Membership.LoweredEmail, aspnet_Membership.IsApproved, 
                         aspnet_Membership.IsLockedOut, aspnet_Users.IsAnonymous, aspnet_Membership.CreateDate, aspnet_Membership.LastLoginDate, 
                         aspnet_Users.LastActivityDate
FROM            aspnet_Membership INNER JOIN
                         aspnet_Users ON aspnet_Membership.UserId = aspnet_Users.UserId</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="UserId" DataSetColumn="UserId" />
              <Mapping SourceColumn="LoweredUserName" DataSetColumn="LoweredUserName" />
              <Mapping SourceColumn="LoweredEmail" DataSetColumn="LoweredEmail" />
              <Mapping SourceColumn="IsApproved" DataSetColumn="IsApproved" />
              <Mapping SourceColumn="IsLockedOut" DataSetColumn="IsLockedOut" />
              <Mapping SourceColumn="IsAnonymous" DataSetColumn="IsAnonymous" />
              <Mapping SourceColumn="CreateDate" DataSetColumn="CreateDate" />
              <Mapping SourceColumn="LastLoginDate" DataSetColumn="LastLoginDate" />
              <Mapping SourceColumn="LastActivityDate" DataSetColumn="LastActivityDate" />
            </Mappings>
            <Sources>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetByEmail" GetMethodModifier="Public" GetMethodName="GetByEmail" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetByEmail" UserSourceName="GetByEmail">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        aspnet_Membership.UserId, aspnet_Users.LoweredUserName, aspnet_Membership.LoweredEmail, aspnet_Membership.IsApproved, 
                         aspnet_Membership.IsLockedOut, aspnet_Users.IsAnonymous, aspnet_Membership.CreateDate, aspnet_Membership.LastLoginDate, 
                         aspnet_Users.LastActivityDate
FROM            aspnet_Membership INNER JOIN
                         aspnet_Users ON aspnet_Membership.UserId = aspnet_Users.UserId
WHERE        (aspnet_Membership.LoweredEmail LIKE @QueryLetter + '%')
ORDER BY aspnet_Membership.LoweredEmail</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="true" AutogeneratedName="QueryLetter" ColumnName="LoweredEmail" DataSourceName="dbWSAT.dbo.aspnet_Membership" DataTypeServer="nvarchar(256)" DbType="String" Direction="Input" ParameterName="@QueryLetter" Precision="0" ProviderType="NVarChar" Scale="0" Size="256" SourceColumn="LoweredEmail" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
              <DbSource ConnectionRef="dbWSATConnectionString (Web.config)" DbObjectType="Unknown" GenerateMethods="Get" GenerateShortCommands="true" GeneratorGetMethodName="GetByUserName" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetByUserName" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetByUserName" UserSourceName="GetByUserName">
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="true">
                    <CommandText>SELECT        aspnet_Membership.UserId, aspnet_Users.LoweredUserName, aspnet_Membership.LoweredEmail, aspnet_Membership.IsApproved, 
                         aspnet_Membership.IsLockedOut, aspnet_Users.IsAnonymous, aspnet_Membership.CreateDate, aspnet_Membership.LastLoginDate, 
                         aspnet_Users.LastActivityDate
FROM            aspnet_Membership INNER JOIN
                         aspnet_Users ON aspnet_Membership.UserId = aspnet_Users.UserId
WHERE        (aspnet_Users.LoweredUserName LIKE @QueryLetter + '%')
ORDER BY aspnet_Users.LoweredUserName</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="QueryLetter" ColumnName="LoweredUserName" DataSourceName="dbWSAT.dbo.aspnet_Users" DataTypeServer="nvarchar(256)" DbType="String" Direction="Input" ParameterName="@QueryLetter" Precision="0" ProviderType="NVarChar" Scale="0" Size="256" SourceColumn="LoweredUserName" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </Sources>
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="DataSet1" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:Generator_UserDSName="DataSet1" msprop:Generator_DataSetName="DataSet1">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="EmailFrom" msprop:Generator_UserTableName="EmailFrom" msprop:Generator_RowDeletedName="EmailFromRowDeleted" msprop:Generator_RowChangedName="EmailFromRowChanged" msprop:Generator_RowClassName="EmailFromRow" msprop:Generator_RowChangingName="EmailFromRowChanging" msprop:Generator_RowEvArgName="EmailFromRowChangeEvent" msprop:Generator_RowEvHandlerName="EmailFromRowChangeEventHandler" msprop:Generator_TableClassName="EmailFromDataTable" msprop:Generator_TableVarName="tableEmailFrom" msprop:Generator_RowDeletingName="EmailFromRowDeleting" msprop:Generator_TablePropName="EmailFrom">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="EmailFromID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="EmailFromID" msprop:Generator_ColumnVarNameInTable="columnEmailFromID" msprop:Generator_ColumnPropNameInRow="EmailFromID" msprop:Generator_ColumnPropNameInTable="EmailFromIDColumn" type="xs:int" />
              <xs:element name="EmailAddress" msprop:Generator_UserColumnName="EmailAddress" msprop:Generator_ColumnVarNameInTable="columnEmailAddress" msprop:Generator_ColumnPropNameInRow="EmailAddress" msprop:Generator_ColumnPropNameInTable="EmailAddressColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="Description" msprop:Generator_UserColumnName="Description" msprop:Generator_ColumnVarNameInTable="columnDescription" msprop:Generator_ColumnPropNameInRow="Description" msprop:Generator_ColumnPropNameInTable="DescriptionColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="smtpClient" msprop:Generator_UserTableName="smtpClient" msprop:Generator_RowDeletedName="smtpClientRowDeleted" msprop:Generator_RowChangedName="smtpClientRowChanged" msprop:Generator_RowClassName="smtpClientRow" msprop:Generator_RowChangingName="smtpClientRowChanging" msprop:Generator_RowEvArgName="smtpClientRowChangeEvent" msprop:Generator_RowEvHandlerName="smtpClientRowChangeEventHandler" msprop:Generator_TableClassName="smtpClientDataTable" msprop:Generator_TableVarName="tablesmtpClient" msprop:Generator_RowDeletingName="smtpClientRowDeleting" msprop:Generator_TablePropName="smtpClient">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="smtpID" msdata:ReadOnly="true" msdata:AutoIncrement="true" msdata:AutoIncrementSeed="-1" msdata:AutoIncrementStep="-1" msprop:Generator_UserColumnName="smtpID" msprop:Generator_ColumnVarNameInTable="columnsmtpID" msprop:Generator_ColumnPropNameInRow="smtpID" msprop:Generator_ColumnPropNameInTable="smtpIDColumn" type="xs:int" />
              <xs:element name="smtpClient" msprop:Generator_UserColumnName="smtpClient" msprop:Generator_ColumnVarNameInTable="columnsmtpClient" msprop:Generator_ColumnPropNameInRow="smtpClient" msprop:Generator_ColumnPropNameInTable="smtpClientColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="150" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="aspnet_Membership" msprop:Generator_UserTableName="aspnet_Membership" msprop:Generator_RowDeletedName="aspnet_MembershipRowDeleted" msprop:Generator_RowChangedName="aspnet_MembershipRowChanged" msprop:Generator_RowClassName="aspnet_MembershipRow" msprop:Generator_RowChangingName="aspnet_MembershipRowChanging" msprop:Generator_RowEvArgName="aspnet_MembershipRowChangeEvent" msprop:Generator_RowEvHandlerName="aspnet_MembershipRowChangeEventHandler" msprop:Generator_TableClassName="aspnet_MembershipDataTable" msprop:Generator_TableVarName="tableaspnet_Membership" msprop:Generator_RowDeletingName="aspnet_MembershipRowDeleting" msprop:Generator_TablePropName="aspnet_Membership">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="UserId" msdata:DataType="System.Guid, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" msprop:Generator_UserColumnName="UserId" msprop:Generator_ColumnVarNameInTable="columnUserId" msprop:Generator_ColumnPropNameInRow="UserId" msprop:Generator_ColumnPropNameInTable="UserIdColumn" type="xs:string" />
              <xs:element name="LoweredUserName" msprop:Generator_UserColumnName="LoweredUserName" msprop:Generator_ColumnVarNameInTable="columnLoweredUserName" msprop:Generator_ColumnPropNameInRow="LoweredUserName" msprop:Generator_ColumnPropNameInTable="LoweredUserNameColumn">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="LoweredEmail" msprop:Generator_UserColumnName="LoweredEmail" msprop:Generator_ColumnVarNameInTable="columnLoweredEmail" msprop:Generator_ColumnPropNameInRow="LoweredEmail" msprop:Generator_ColumnPropNameInTable="LoweredEmailColumn" minOccurs="0">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="256" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IsApproved" msprop:Generator_UserColumnName="IsApproved" msprop:Generator_ColumnVarNameInTable="columnIsApproved" msprop:Generator_ColumnPropNameInRow="IsApproved" msprop:Generator_ColumnPropNameInTable="IsApprovedColumn" type="xs:boolean" />
              <xs:element name="IsLockedOut" msprop:Generator_UserColumnName="IsLockedOut" msprop:Generator_ColumnVarNameInTable="columnIsLockedOut" msprop:Generator_ColumnPropNameInRow="IsLockedOut" msprop:Generator_ColumnPropNameInTable="IsLockedOutColumn" type="xs:boolean" />
              <xs:element name="IsAnonymous" msprop:Generator_UserColumnName="IsAnonymous" msprop:Generator_ColumnVarNameInTable="columnIsAnonymous" msprop:Generator_ColumnPropNameInRow="IsAnonymous" msprop:Generator_ColumnPropNameInTable="IsAnonymousColumn" type="xs:boolean" />
              <xs:element name="CreateDate" msprop:Generator_UserColumnName="CreateDate" msprop:Generator_ColumnVarNameInTable="columnCreateDate" msprop:Generator_ColumnPropNameInRow="CreateDate" msprop:Generator_ColumnPropNameInTable="CreateDateColumn" type="xs:dateTime" />
              <xs:element name="LastLoginDate" msprop:Generator_UserColumnName="LastLoginDate" msprop:Generator_ColumnVarNameInTable="columnLastLoginDate" msprop:Generator_ColumnPropNameInRow="LastLoginDate" msprop:Generator_ColumnPropNameInTable="LastLoginDateColumn" type="xs:dateTime" />
              <xs:element name="LastActivityDate" msprop:Generator_UserColumnName="LastActivityDate" msprop:Generator_ColumnVarNameInTable="columnLastActivityDate" msprop:Generator_ColumnPropNameInRow="LastActivityDate" msprop:Generator_ColumnPropNameInTable="LastActivityDateColumn" type="xs:dateTime" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:EmailFrom" />
      <xs:field xpath="mstns:EmailFromID" />
    </xs:unique>
    <xs:unique name="smtpClient_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:smtpClient" />
      <xs:field xpath="mstns:smtpID" />
    </xs:unique>
  </xs:element>
</xs:schema>