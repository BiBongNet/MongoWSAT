MongoWSAT

An ASP.NET MVC project with a pre-configured admin section using MongoDB Membership and Role Providers.


Usage:

* Add MongoWSAT to your web project (MVC or WebForms) using Nuget
* Point browser to 'Users/Default.aspx' and follow instructions to create the default admin account and role


Motivation:

Provide a quick way to administer users for ASP.NET websites (both MVC and WebForms) which use MongoDB rather than Sql Server.

ASP.NET MVC sites can use ASP.NET pages without issue so Hunzonian's MyWSAT Website Starter Kit offers a great way to get up and running quickly. But MyWSAT is closely tied to SQL Server.  
This project is a port of an older version of the MyWSAT Starter Kit which was not so closely tied to Sql Server.

Converting this project to use a NoSQL data store other than Mongo should be fairly straightforward.  The only place that explicitly relies on Mongo now is the WebProfile class.

  MyWSAT
  http://mywsat.codeplex.com/


License:

  LGPL - The WSAT code is largely unchanged from Hunzonian's original version and retains the original LGPL license.


Dependencies:

All dependencies are included.
  MongoProviders - https://github.com/alanning/MongoProviders
  NUnit - NuGet




Changes from MyWSAT

1. Use Mongo Membership and Role Providers
   <insert config sections>

2. Replace FCKEditor with Ajax Control Toolkit Html Editor Extender

3. Change membership provider name to non-sql name (WSATSqlMembershipProviderAdmin -> MembershipProviderAdmin)

4. Enable usage of Hashed passwords.  MyWSAT assumes password retrieval is enabled which is not possible with hashed passwords.

5. Convert from using Profile Provider to using serialized class

6. Convert from using Membership.xsd table adapter to using Membership provider

7. Make Dashboard default to showing Users by Name

8. Remove usage of database for storing SMTP server and email From addresses in Quick_contact.aspx.cs
